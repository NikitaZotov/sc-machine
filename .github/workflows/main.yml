name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run_tests:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu latest, GCC, Sc-dictionary fs-storage",
            os: ubuntu-latest,
            file_memory: "Dictionary",
            build_type: "Debug",
            cc: "gcc",
            cxx: "g++",
          }
          - {
            name: "Ubuntu latest, GCC, Sc-rocksdb fs-storage",
            os: ubuntu-latest,
            file_memory: "Rocksdb",
            build_type: "Debug",
            cc: "gcc",
            cxx: "g++",
            coverage: "OFF"
          }
          - {
            name: "Ubuntu latest, GCC, Release, Sc-dictionary fs-storage",
            os: ubuntu-latest,
            file_memory: "Dictionary",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            coverage: "ON"
          }
          - {
            name: "Ubuntu latest, GCC, Release, Sc-rocksdb fs-storage",
            os: ubuntu-latest,
            file_memory: "Rocksdb",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
          }

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Install dependencies
        id: install_deps
        run: scripts/install_deps_ubuntu.sh

      - name: Restore build caches
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.config.os}}-${{ matrix.config.cxx }}-${{ matrix.config.build_type }}-${{ matrix.config.file_memory }}

      - name: Build
        id: run_cmake
        env:
          CC: ${{ matrix.config.cc }}
          CCX: ${{ matrix.config.cxx }}
          FILE_MEMORY: ${{ matrix.config.file_memory }}
          BUILD_TYPE: ${{ matrix.config.build_type }}
          COVERAGE: OFF
          SANITIZER_TYPE: none
        run: scripts/ci/make-tests.sh

      - name: Run tests
        id: run_tests
        run: scripts/ci/run-tests.sh
